#!/usr/bin/python

import sys, getopt, cfgparse

from synthsoma.synthsoma import SyntheticSoma

def usage():
	print "USAGE:"
	print "\t -f <path to .ini file> \t to specify ini file"
	print "\t -h or --help \t\t\t to print this message"
	sys.exit(2)

def loadIni():
	if len(sys.argv)==1: usage()
	args = sys.argv
	args.pop(0)
	try: optlist, args = getopt.getopt(args, 'f:help')
	except getopt.GetoptError, err:  usage()
	else:
		for i, o in optlist:
			if (i == '-h' or i =="--help"): usage()
			if (i == '-f'): path = o

	c = cfgparse.ConfigParser()
	#universal options
	c.add_option('bcastIP', "string")

	#tspike related options
	c.add_option('tspikes', "string")
	c.add_option('ttPath', "string")
	c.add_option('ttNum', "string")
	c.add_option('ttRate', "string")

	#wave related options
	c.add_option('waves', "string")
	c.add_option('wavePath', "string")
	c.add_option('waveNum', "string")
	c.add_option('waveChan', "string")

	#event related options
	c.add_option('events', "string")

	c.add_file(path)
	opts = c.parse()
	return opts


def run():
	opts = loadIni()
	bcastIP = opts.bcastIP
	synthSoma = SyntheticSoma(bcastIP)

##########
	if opts.tspikes=="on":# TSpike related initialization of synthSoma
		print "\nLoading .tt files"
		ttPath = opts.ttPath.split()
		ttNum = opts.ttNum.split()
		ttRate = opts.ttRate.split()

		for i in range(len(ttPath)):
			synthSoma.addSpikeSource(ttPath[i], int(ttNum[i]), int(ttRate[i]))
		
	else: print "tspike = off, TSpikes will not be simulated!"

##########
	if opts.waves=="on": #wave related initialization of synthSoma
		print "\nLoading .eeg files"
		wavePath = opts.wavePath.split()
		waveNum  = opts.waveNum.split()
		waveChan = opts.waveChan.split()

		for i in range(len(wavePath)):
			synthSoma.addWaveSource(wavePath[i], int(waveNum[i]), int(waveChan[i]))

	else: print "wave = off, Waves will not be simulated"

##########
	if opts.events == "on": #event related initialization of synthSoma
		print "Starting Event Handling Enging:"
		synthSoma.enableEvents()
	else: print "events = off, Events will not be simulated"

	print "Broadcasting to IP:", bcastIP
	synthSoma.start()

if __name__=="__main__":
	run()
#!/usr/bin/python



